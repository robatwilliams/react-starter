{
  "compilerOptions": {
    "forceConsistentCasingInFileNames": true,

    // Use tslib for runtime helpers (e.g. __extends), rather than repeating them in each module
    "importHelpers": true,
    "noEmitHelpers": true,

    "jsx": "react",

    "lib": [
      "dom",
      "es5",
      "es2015.promise"  // polyfilled if needed
    ],

    // Let Webpack consume ES6 modules and transpile imports/exports, so dead code elimination works
    "module": "es6",

    // Our ES6 modules are consumed by Webpack, not browsers, so this is ok. Needed to load tslib.
    "moduleResolution": "node",

    // The only one of the lint-style check that isn't supported by TSLint
    "noImplicitReturns": true,

    "outDir": "./dist/",
    "sourceMap": true,

    // noImplicit{Any,This}, strict{FunctionTypes,NullChecks}, and any future strict compiler features
    "strict": true,

    "target": "es5"
  },
  "files": [
    // Just the entry point, as recommended by awesome-typescript-loader
    "./src/index.tsx"
  ]
}
